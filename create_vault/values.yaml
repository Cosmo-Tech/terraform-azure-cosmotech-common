global:
  enabled: true
  namespace: ${NAMESPACE}
  tlsDisable: true
server:
  enabled: "-"


  resources: {}
  # resources:
  #   requests:
  #     memory: 256Mi
  #     cpu: 250m
  #   limits:
  #     memory: 256Mi
  #     cpu: 250m
  dataStorage:
    enabled: true
    size: 10Gi
    mountPath: "/vault/data"
    storageClass: null
    accessMode: ReadWriteOnce
  ha:
    enabled: true
    replicas: ${REPLICAS}
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true

        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          # Enable unauthenticated metrics access (necessary for Prometheus Operator)
          #telemetry {
          #  unauthenticated_metrics_access = "true"
          #}
        }

        storage "raft" {
          path = "/vault/data"
          retry_join {
          leader_api_addr = "http://vault-0.vault-internal:8200"
          }
          retry_join {
          leader_api_addr = "http://vault-1.vault-internal:8200"
          }
          retry_join {
          leader_api_addr = "http://vault-2.vault-internal:8200"
          }
        }

        service_registration "kubernetes" {}
    disruptionBudget:
      enabled: false

  affinity: |
    # podAntiAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     - labelSelector:
    #         matchLabels:
    #           app.kubernetes.io/name: {{ template "vault.name" . }}
    #           app.kubernetes.io/instance: "{{ .Release.Name }}"
    #           component: server
    #       topologyKey: kubernetes.io/hostname

  ingress:
    enabled: ${VAULT_INGRESS_ENABLED}
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    ingressClassName: "nginx"
    pathType: Prefix
    activeService: true
    hosts:
      - host: ${VAULT_DNS_NAME}
        paths: 
          - /vault/*
          - /ui/*

ui:
  enabled: true
  activeVaultPodOnly: true
        
