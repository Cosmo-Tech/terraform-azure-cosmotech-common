loki:
  isDefault: false
  persistence:
    enabled: true
    accessModes:
    - ReadWriteOnce
    size: "${LOKI_PERSISTENCE_MEMORY}"
  config:
    auth_enabled: false
    table_manager:
      retention_deletes_enabled: true
      retention_period: "${LOKI_RETENTION_PERIOD}"
    limits_config:
      max_entries_limit_per_query: ${LOKI_MAX_ENTRIES_LIMIT_PER_QUERY}
grafana:
  enabled: true
  persistence:
    type: pvc
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: "${LOKI_PERSISTENCE_MEMORY}"
  image:
    tag: "${GRAFANA_IMAGE_TAG}"

promtail:
  config:
    clients:
      - url: http://loki.${MONITORING_NAMESPACE}:3100/loki/api/v1/push
    snippets:
      pipelineStages:
      - cri: {}
      - match:
          selector: '{job="*"} |= "workflow"'
          stages:
            - json:
                expressions:
                  output: log
            - json:
                source: output
                expressions:
                  message: message
                  level: log.level
            - labels:
                tenant_id:
                message:
                namespace:
      - match:
          action: drop
          pipeline_name: keep only workflows logs
          selector: '{container!="main"}'
      - match:
          action: drop
          pipeline_name: drop redis
          selector: '{app="redis"}'
      - match:
          action: drop
          pipeline_name: drop minio
          selector: '{app="minio"}'
      - match:
          action: drop
          pipeline_name: drop postgresql
          selector: '{app="postgresql"}'
      - match:
          action: drop
          pipeline_name: drop cosmotech-api
          selector: '{app="cosmotech-api"}'
      - output:
          source: message
  tolerations:
    - effect: NoSchedule
      operator: Exists